name: Deploy to production

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: List files in repository root
        run: ls -la

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Run tests
        run: ./gradlew test

      - name: Build with Gradle
        run: ./gradlew build

      - name: Save build output
        run: echo "build_output=successful" >> $GITHUB_STATE

      - name: Print current directory path
        run: pwd

      - name: List files in build/libs directory
        run: ls -la build/libs

#  docker:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: List files in repository root
#        run: ls -la
#
#      - name: Login Docker Hub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Print current directory path
#        run: pwd
#
#      - name: List files in directory
#        run: ls
#
#      - name: voltar uma pasta
#        run: cd ..
#
#      - name: List files in directory
#        run: ls
#
#      - name: Print current directory path
#        run: pwd
#
#      - name: Build and push to Docker Hub
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          push: true
#          tags: ${{ secrets.DOCKER_USERNAME }}/spring-boot-docker:${{ github.sha }}
#          build-args: |
#            --build-arg DATABASE_URL=${{ secrets.DATABASE_URL }}
#            --build-arg DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
#            --build-arg DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
#
#      - name: Set docker image output
#        run: echo "docker_image=${{ secrets.DOCKER_USERNAME }}/spring-boot-docker:${{ github.sha }}" >> $GITHUB_OUTPUT

#  deploy:
#    needs: docker
#    runs-on: self-hosted
#    env:
#      DATABASE_URL: ${{ secrets.DATABASE_URL }}
#      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
#      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
#      CONTAINER_NAME: ms-driver
#    steps:
#      - name: Pull image from Docker Hub
#        run: echo "docker_image=${{ secrets.DOCKER_USERNAME }}/spring-boot-docker:${{ github.sha }}" >> $GITHUB_OUTPUT
#
#      - name: Show environment variables
#        run: |
#          echo "DATABASE_URL: $DATABASE_URL"
#          echo "DATABASE_USERNAME: $DATABASE_USERNAME"
#          echo "DATABASE_PASSWORD: $DATABASE_PASSWORD"
#
#      - name: Stop and remove the previous container
#        run: |
#          sudo docker stop $CONTAINER_NAME || true
#          sudo docker rm $CONTAINER_NAME || true
#
#      - name: Run docker container
#        run: |
#          sudo docker run -d \
#            --name $CONTAINER_NAME \
#            -p 8080:8080 \
#            -e DATABASE_URL=$DATABASE_URL \
#            -e DATABASE_USERNAME=$DATABASE_USERNAME \
#            -e DATABASE_PASSWORD=$DATABASE_PASSWORD \
#            ${{ secrets.DOCKER_USERNAME }}/spring-boot-docker:${{ github.sha }}
